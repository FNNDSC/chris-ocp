apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations:
    name: ChRIS_store MySQL Database
  creationTimestamp: null
  labels:
    io.kompose.service: chris-store-db
  name: chris-store-db
spec:
  replicas: 1
  selector:
    io.kompose.service: chris-store-db
  strategy:
    resources: {}
    type: Rolling
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/local: "true"
        io.kompose.service: chris-store-db
    spec:
      serviceAccountName: pipeline
      containers:
        - env:
            - name: POSTGRES_DB
              value: chris_store
            - name: POSTGRES_PASSWORD
              value: chirs1234
            - name: POSTGRES_USER
              value: chris
          image: postgres:13
          name: chris-store-db
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: chris-store-db-data
      restartPolicy: Always
      volumes:
        - name: chris-store-db-data
          persistentVolumeClaim:
            claimName: chris-store-db-data
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chris-store-db
  labels:
    app: chris-store-db
    env: production
spec:
  replicas: 1  # stateful service, so only a single replica must be used
  selector:
    matchLabels:
      app: chris-store-db
      env: production
  template:
    metadata:
      name: chris-store-db
      labels:
        app: chris-db
        env: production
    spec:
      serviceAccountName: pipeline
      containers:
        - name: chris-store-db
          image: postgres:13
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: chris-secrets-env
          volumeMounts:
            - name: chrisdb
              mountPath: "/var/lib/postgresql"
      # Mount a persistent volume onto ChRIS DB
      volumes:
        - name: chrisdb
          persistentVolumeClaim:
            claimName: chrisdb

